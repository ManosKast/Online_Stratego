@startuml

package Model{
package game_characters{

interface GameCharactersInterface{

+ getRow() : int

+ getLine() : int

+ getFrontPicture() : Icon

+ getBackPicture() : Icon

+ getPower() : int

+ getPlayersID() : int

+ isAlive() : boolean

+ move(int nextRow, int nextLine) : void

+ attack(GameCharacters defender) : void


}

+abstract class GameCharacters implements GameCharactersInterface{
- row : int
- line : int
- power : int
- alive : boolean
- monstersPicture : Icon
- cardsBack : Icon
- ID : int

- void updateCardsPictures() : void

~ kills(GameCharacters dead) : void

~ winsBattleAgainst(GameCharacters defender) : byte

~ isValidStartingPosition(int line, int row, int playersID) : boolean

~ isEnemy(GameCharacters monster) : boolean

~ isValidPosition(int line, int row) : boolean

+ getRow() : int

+ getLine() : int

+ getFrontPicture() : Icon

+ getBackPicture() : Icon

+ getPower() : int

+ getPlayersID() : int

+ isAlive() : boolean

+ abstract move(int nextRow, int nextLine) : void

+ abstract attack(GameCharacters defender) : void

}

package MoveableObjects{
+abstract class MoveableCharacters extends GameCharacters{

+ move(int nextRow, int nextLine) : void

+ attack(GameCharacters defender) : void

}

package SpecialMoveableObjects{

+abstract class SpecialMoveableCharacters extends MoveableCharacters{

+ attack(GameCharacters defender) : void

}

package Special_Characters{
class Dwarf extends SpecialMoveableCharacters{
+ attack(GameCharacters defender) : void
}

class Scout extends SpecialMoveableCharacters{
+ attack(GameCharacters defender) : void
}

class Slayer extends SpecialMoveableCharacters{
+ attack(GameCharacters defender) : void
}
}


}

}


}
@enduml